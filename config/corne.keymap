/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};
    
/ {
    behaviors {
        hm: homerow_mods {
            compatible      = "zmk,behavior-hold-tap";
            label           = "homerow_mods";
            #binding-cells  = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms    = <0>;                        // Not sure about this length
            flavor          = "tap-preferred";
            bindings        = <&kp>, <&kp>;
        };
        lphttp: left_positional_hold_tap_tap_preferred {
            compatible                 = "zmk,behavior-hold-tap";
            label                      = "left_positional_hold_tap_tap_preferred";
            #binding-cells             = <2>;
            tapping-term-ms            = <200>;
            quick-tap-ms               = <0>;
            flavor                     = "tap-preferred";
            bindings                   = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11>;
        };
    };

    macros {
        arrow: arrow {
            label = "arrow";
            compatible = "zmk,behavior_macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp MINUS &kp GT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |      |  Y  |  U   |  I  |  O  |  P  | BKSP |
// |  ESC |  A  |  S  |  D  |  F  |  G  |      |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |      |  N  |  M   |  ,  |  .  |  /  | ENT  |
//                    | CMD | LWR | SPC |      | SPC | RSE  | ALT |
            bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp ESC   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RET
                  &kp LCMD &mo 1 &kp SPACE   &kp SPACE &mo 2 &kp RALT
            >;
        };
        lower_layer {
// -----------------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |      |  6  |  7  |  8  |  9  |  0  | BKSP |
// |      | KOR |     |     |     |     |      |     | ->  |     |     |     |      |
// | CAPS |     |     |     |     |     |      |     |     |     |     |     |      |
//                    |     |     |     |      |     |     |     |
            bindings = <
   &trans     &kp N1    &kp N2 &kp N3 &kp N4 &kp N5    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &trans
   &trans     &kp LANG1 &trans &trans &trans &trans    &trans &arrow &trans &trans &trans &trans
   &caps_word &trans    &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
                               &trans &trans &trans    &trans &trans &trans
            >;
        };
        raise_layer {
// -----------------------------------------------------------------------------------------
// |  ~  |  !  |  @  |  #  |  $  |  %  |      |  ^  |  &  |  *  | "|" |  \  |     |
// |     |  _  |  -  |  +  |  =  |     |      |     |  (  |  )  |  {  |  }  |  `  |
// |     |     |     |  <  |  >  |     |      |     |  [  |  ]  |  /  |  ?  |     |
//                   | GUI |     | SPC |      | ENT |     | ALT |
            bindings = <
   &kp TILDE &kp EXCL  &kp AT    &kp HASH &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp STAR &kp PIPE &kp BSLH  &trans
   &trans    &kp UNDER &kp MINUS &kp PLUS &kp EQUAL &trans      &trans    &kp LPAR  &kp RPAR &kp LBRC &kp RBRC  &kp GRAVE
   &trans    &trans    &trans    &kp LT   &kp GT    &trans      &trans    &kp LBKT  &kp RBKT &kp FSLH &kp QMARK &trans
                                 &trans   &trans    &trans      &trans    &trans    &trans
            >;
        };
    };
};

// &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
