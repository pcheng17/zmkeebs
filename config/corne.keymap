/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define NAVI    3
#define FUNC    4
#define NUMPAD  5
#define ADJUST  6


&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    behaviors {
        hm: homerow_mod {
            compatible      = "zmk,behavior-hold-tap";
            label           = "homerow_mod";
            #binding-cells  = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms    = <200>;
            flavor          = "balanced";
            bindings        = <&kp>, <&kp>;
        };
        lhm: left_homerow_mod {
            compatible                 = "zmk,behavior-hold-tap";
            label                      = "left_homerow_mod";
            #binding-cells             = <2>;
            tapping-term-ms            = <200>;
            quick-tap-ms               = <200>;
            flavor                     = "balanced";
            bindings                   = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 13 14 15 16 18 19 20 21 22 23 30 31 32 33 34 35>;
        };
        rhm: right_homerow_mod {
            compatible                 = "zmk,behavior-hold-tap";
            label                      = "right_homerow_mod";
            #binding-cells             = <2>;
            tapping-term-ms            = <200>;
            quick-tap-ms               = <200>;
            flavor                     = "balanced";
            bindings                   = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 19 20 21 22 24 25 26 27 28 29>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |      |  Y  |  U   |  I  |  O  |  P  | BKSP |
// |  ESC |  A  |  S  |  D  |  F  |  G  |      |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |      |  N  |  M   |  ,  |  .  |  /  | ENT  |
//                    | CMD | LWR | SPC |      | SPC | RSE  | ALT |
            bindings = <
   &kp TAB      &kp Q        &kp W       &kp E       &kp R         &kp T            &kp Y     &kp U         &kp I           &kp O         &kp P          &kp BSPC
   &th LCTL ESC &lhm LCTRL A &lhm LALT S &lhm LCMD D &lhm LSHFT F  &kp G            &kp H     &rhm RSHFT J  &rhm LCMD K     &rhm LALT L   &rhm LCTL SEMI &kp SQT
   &kp LSHFT    &kp Z        &kp X       &kp C       &kp V         &kp B            &kp N     &kp M         &kp COMMA       &kp DOT       &kp FSLH       &kp RET
                                         &kp LCMD    &lt LOWER DEL &lt NAVI SPACE   &kp SPACE &mo RAISE     &mo FUNC
            >;
        };
        lower_layer {
// -----------------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |      |  6  |  7  |  8  |  9  |  0  | BKSP |
// |      | KOR |     |     |     |     |      |     |     |     |     |     |      |
// | CAPS |     |     |     |     |     |      |     |     |     |     |     |      |
//                    |     |     |     |      |     |     |     |
            bindings = <
   &trans     &kp N1    &kp N2 &kp N3 &kp N4 &kp N5    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &trans
   &trans     &kp LANG1 &none  &none  &none  &none     &none  &none  &none  &none  &none  &none
   &caps_word &none     &none  &none  &none  &none     &none  &none  &none  &none  &none  &trans
                               &trans &trans &trans    &trans &trans &trans
            >;
        };
        raise_layer {
            bindings = <
                &kp TILDE &kp EXCL  &kp AT    &kp HASH &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp STAR &kp PIPE &kp BSLH  &trans
                &trans    &kp UNDER &kp MINUS &kp PLUS &kp EQUAL &none       &none     &kp LPAR  &kp RPAR &kp LBKT &kp RBKT  &kp GRAVE
                &none     &none     &none     &kp LT   &kp GT    &none       &none     &kp LBRC  &kp RBRC &kp FSLH &kp QMARK &trans
                                 &trans   &trans    &trans      &trans    &trans    &trans
            >;
        };
        navi_layer {
            bindings = <
                &none &none &none &none  &none  &none    &kp HOME &kp PG_DN &kp PG_UP &kp END   &none &none
                &none &none &none &none  &none  &none    &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &none &none
                &none &none &none &none  &none  &none    &none    &none     &none     &none     &none &none
                                  &trans &trans &trans   &trans   &trans    &trans
            >;
        };
        fn_layer {
            bindings = <
                &none &kp F12 &kp F7 &kp F8 &kp F9 &kp PSCRN    &none  &none     &none    &none    &none    &none
                &none &kp F11 &kp F4 &kp F5 &kp F6 &none        &none  &kp RSHFT &kp LCMD &kp LALT &kp LCTL &none
                &none &kp F10 &kp F1 &kp F2 &kp F3 &none        &none  &none     &none    &none    &none    &none
                                     &trans &trans &trans       &trans &trans    &trans
            >;
        };
        numpad_layer {
            bindings = <
                &none &none &none &none  &none  &none    &none     &kp N7    &kp N8    &kp N9    &kp EQUAL &none
                &none &none &none &none  &none  &none    &kp FLSH  &kp N4    &kp N5    &kp N6    &kp MINUS &none
                &none &none &none &none  &none  &none    &kp STAR  &kp N1    &kp N2    &kp N3    &kp PLUS  &none
                                  &trans &trans &trans   &kp SPACE &kp N0    &kp DOT
            >;
        };
        adjust_layer {
            bindings = <
                &none &none &none &none  &none  &none    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
                &none &none &none &none  &none  &none    &none  &none  &none &none &none &none
                &none &none &none &none  &none  &none    &none  &to NUMPAD  &none &none &none &none
                                  &trans &trans &trans   &trans &trans &trans
            >;
        };
    };
};

// &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
